# Run target specfic first as may do setup for following module calls
- name: Install ubuntu packages
  import_tasks: ubuntu.yml
  when: ansible_facts['os_family'] == "Debian"

- name: Install osx packages
  import_tasks: osx.yml
  when: ansible_facts['os_family'] == "Darwin"

- name: Install npm global packages
  npm:
    name: "{{ item }}"
    global: yes
  loop: "{{ npm.packages.global }}"

# Install the desired ruby version(s)
- name: Install ruby versions
  remote_user: packages.install_user
  shell: >
    rbenv versions | grep '{{ item }}'
    && echo 'Already installed.' || rbenv install '{{ item }}'
  loop: "{{ ruby.versions }}"
  register: rbenv_result
  changed_when: "'Already installed.' not in rbenv_result.stdout"

- name: Set the global ruby version
  shell: rbenv global "{{ ruby.default }}"

- name: Install gem global
  remote_user: packages.install_user
  gem:
    name: "{{ item }}"
    user_install: false
    executable: "~/.rbenv/shims/gem"
  loop: "{{ ruby.gem.packages }}"


# Install the desired go packages
- name: Install go packages
  remote_user: packages.install_user
  shell: >
    which '{{ item }}' | grep '{{ item }}'
    && echo 'Already installed.' || GO111MODULE=on go get '{{ item }}'
  loop: "{{ go.packages }}"
  register: gopkg_result
  changed_when: "'Already installed.' not in gopkg_result.stdout"
