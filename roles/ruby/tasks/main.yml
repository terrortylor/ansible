# After installing note the command: source /home/vagrant/.rvm/scripts/rvm
---
- name: Fail if username is empty to prevent become falling back on root
  fail:
    msg: "Username is empty"
  when: username | length == 0

- name: Gather the rpm package facts
  package_facts:
    manager: rpm
  when: ansible_facts.packages is not defined

- name: "Install RVM dependencies"
  package:
    name: "{{ item }}"
  when: item not in ansible_facts.packages
  loop:
    - curl
    - gnupg2

# This is a bit hacky, but as the path isn't updated after installing RVM on the first run this ensures RVM can be found
- name: Set path to include RVM, and ensure single-user install
  block:

  # Linter doesn't like commands without a clause, so this command that doesn't change anything
  # has ignore lint on, and output is used as clause in command that potentially does change
  - name: Get list of added keys
    command: gpg2 --list-keys
    register: sym
    tags:
      - skip_ansible_lint

  - name: Add GPG2 key
    command: |
      gpg2 --keyserver hkp://pool.sks-keyservers.net
      --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      # Must be an or here as sometimes one fails to import... *SHAKES FIST AT RVM INSTALL METHOD*
    when: '"409B6B1796C275462A1703113804BB82D39DC0E3" not in sym.stdout or "7D2BAF1CF37B13E2069D6956105BD0E739499BDB" not in sym.stdout'

  - name: Get default ruby stat
    stat:
      path: "{{ home_path }}/{{ username }}/.rvm/bin/rvm"
    register: sym

  - name: Install RVM
    shell: |
      set -o pipefail
      curl -sSL https://get.rvm.io | bash -s stable
    args:
      warn: no
      creates: "{{ home_path }}/{{ username }}/.rvm/bin/rvm"
    when: not sym.stat.exists


  - name: "Install ruby versions... (takes awhile to do the installs)"
    command: "rvm install {{ item }}"
    args:
      creates: "{{ home_path }}/{{ username }}/.rvm/rubies/{{ item }}"
    loop: "{{ ruby_versions }}"

  - name: Get default ruby stat
    stat:
      path: "{{ home_path }}/{{ username }}/.rvm/gems/default"
    register: sym

  # Ansible doesn't like checking if a string+variable in a changed_when so set_fact to be used
  - name: "Create ruby default path stat"
    set_fact:
      ruby_default_path_fact: "{{ home_path }}/{{ username }}/.rvm/gems/{{ ruby_default_version }}"

  - name: "Set default ruby version"
    command: "rvm alias create default {{ ruby_default_version }}"
    changed_when: sym.stat.islnk is defined and sym.stat.lnk_target != ruby_default_path_fact

  environment:
    PATH: "{{ ansible_env.PATH }}:{{ home_path }}/{{ username }}/.rvm/bin"
  become: true
  become_user: "{{ username }}"
